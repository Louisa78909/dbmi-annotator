-------------------------------------------------------------
Author
-------------------------------------------------------------
Yifan Ning, Wen Zhang

-------------------------------------------------------------
Overview 
-------------------------------------------------------------
Based on the open source project dbmi-annotator.js Version 2.0, dbmi-annotator aims to implement templated annotations. This will enable the creation of multiple annotation plugins that meet various use cases, including drug highlight annotation, DDI (drug-drug interaction) annotation, clinical trial annotation and PK(pharmacokinetics annotation).

Drug highlight annotation helps user to identify drug mention on paragraph. It’s can be clinical drug, active ingredient, drug product, metabolite or drug group. 
DDI annotation is purpose for represents a drug drug interaction information in a structured way. Predesigned DDI form have fields, qualitative or quantitative, that describe the interaction. 
Drug highlight annotation in the text quote of DDI annotation will be added to the field drug mentions, a list box including all drug mention options.

-------------------------------------------------------------
How to run 
-------------------------------------------------------------
Notes: ensure annotator store is running at port 5000
       elasticsearch is running at port 9250

(1) create a config file at config/config.js
Have information below for postgres db connection:

var conString = process.env.DATABASE_URL || 'postgres://<username>:<password>@localhost:5432/dbmiannotator'; 
module.exports = conString;


(2) run program
$ cd dbmi-annotator
$ nodemon server.js

access to 'http://localhost:3000/'

-------------------------------------------------------------
Nodejs based program - folder structures
-------------------------------------------------------------
config/ - configurations
models/ - represents data, implements business logic and handles storage
controllers/ - defines your app routes and their logic
public/ - contains all static files like images, styles and javascript
views/ - provides templates which are rendered and served by your routes
server.js - initializes the app and glues everything together
package.json - remembers all packages that your app depends on and their versions

reference: https://www.terlici.com/2014/08/25/best-practices-express-structure.html

-------------------------------------------------------------
design/ 
-------------------------------------------------------------
(1) diagram-workspaces/
keep source code of diagram

pencil prototyping tool: *.ep
dia: *.dia
yEd: *.graphml

(2) images/
exported images for software design

-------------------------------------------------------------
Deployment (config by components):
-------------------------------------------------------------
1 Components

dbmi-annotator: python based Flask project, provides user authentication, annotation management, load web resources, etc. Running on port 5050

Elasticsearch 1.7.1: elasticsearch data store, running on port 9250
Mysql 1: stores user information, running on port 3336

Apache server 2: serve static resources, proxy external web resources, Running on port 80

2 development mode configuration
Note: Development mode not support external web resources loading

2.1 Required services
Require Annotator store running on port 5000 
Require Elasticsearch 1.7 running on port 9250

2.2 Deploy customized annotatorJs
Download code repo
clone: https://github.com/ningyifan/annotator.git

Update customized annotator JS

$ cd dbmi-annotator
$ make pkg/dbmi-annotator.js

2.3 Deploy dbmi-annotator
clone: https://github.com/dbmi-pitt/dbmi-annotator.git

(1) Copy compiled JS lib from annotator to dbmi-annotator Js folder
$ cp pkg/dbmi-annotator.js dbmi-annotator/public/js/annotator.js

3 production mode configuration

3.1 Required services
Require annotator store running on port 5000 and elasticsearch 1.7 running on port 9250
Require development mode dbmi-annotator running on port 5050

3.2 Apache server configurations
$ sudo aptitude install libapache2-mod-wsgi

install apache server and have configuration in httpd.conf as below:
        
        WSGIDaemonProcess dbmiannotator user=<username> group=<group name> threads=5
        WSGIScriptAlias /dbmiannotator <FILE PATH TO>/start.wsgi
        Alias "/static/" "/<FILE PATH TO>/dbmi-annotator/dbmiannotator/static/"

    #Load function to unescape strings and name it unencode                                   
    RewriteMap unencode int:unescape
    RewriteRule ^/proxy/(htt.*)$ ${unencode:$1} [P]

    RewriteCond ${unencode:${unencode:%{HTTP_REFERER}}} ^http:\/\/.*\/proxy/(http:\/\/(([a-zA-\Z0-9-]+\.?)*[a-zA-Z0-9-]+\.?)(:\d+)?)($|\/(\(([^\\/]+\/)*))([^\/]*)$
    RewriteRule ^/proxy/(.*)$ %1/%6$1 [L]

    RewriteCond ${unencode:${unencode:%{HTTP_REFERER}}} ^http:\/\/.*\/proxy/(http:\/\/(([a-zA-\Z0-9-]+\.?)*[a-zA-Z0-9-]+\.?)(:\d+)?).*?$
    RewriteRule ^/(.*) %1/$1 [L]

    # correct css path for static dailymed pages
    #RewriteRule ^/dbmiannotator/dailymed/(.*)$ http://localhost/DDI-html-labels/dailymed/$1 [P]  
    RewriteRule ^/dailymed/(.*)$ http://localhost/DDI-html-labels/dailymed/$1 [P]  


    ## dbmi annotator config - Flask
    #WSGIDaemonProcess dbmiannotator user=yin2 group=yin2 threads=5
    WSGIScriptAlias /dbmiannotator /home/yin2/dbmi-annotator/dbmiannotator/start.wsgi
    Alias "/static/" "/home/yin2/dbmi-annotator/dbmiannotator/static/"

    <Directory />
        Require all granted
        Options FollowSymLinks
    </Directory>

3.3 run and load external web resources

$ sudo service apache2 restart
Access dbmi-annotator by ‘http://<domainname>:80/dbmiannotator’

apache reverse proxy external web resources, the format below is way of put url in index page to load alive web page
http://<domain>:<port>/proxy/<url>

4 annotator store
require elasticsearch running
$ git clone https://github.com/ningyifan/dbmi-annotator-store.git
Install: see README in repository
Edit dbmi-annotator-store/dbmi-annotator.cfg to set elasticsearch port to 9250 for avoiding conflict with domeo elasticsearch instance on 9200

5 elasticsearch
add “http.port: 9250” to config file
config/elasticsearch.yml
run elasticsearch Version 1.7 at port 9250

Install head plugin:
elasticsearch/bin/plugin -install mobz/elasticsearch-head
open http://localhost:9250/_plugin/head/ for browse datastore

